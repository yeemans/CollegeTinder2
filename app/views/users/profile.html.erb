<% if flash[:request_success] %>
  <article class="message is-success">
    <div class="message-header">
      <p> <%= flash[:request_success] %> </p>
      <button class="delete" aria-label="delete"></button>
    </div>
  </article>
<% end %>

<div class="profile-container">
  <section class="cardRow">

    <div class="avatar-container">
      <div class="avatar-information">
        <div class="avatar-name">
          <!--           username -->
          <h1> Welcome, <%= @username %> </h1>
        </div>
        <div class="avatar-image">
          <!--           pfp image -->
          <%= image_tag @avatar, :class => "pfp", :id => "profile_pic" %>
          <%= render "update_profile_picture" if current_user == @user %>
        </div>
        <!--         # of friends-->
        <div class="function-button-container">
          <div class="avatar-button-container">

            <% if current_user == @user %>
              <button class="avatar-button" id="change_college_info">Settings</button></a>
              <%= render :partial => "layouts/update_user", :locals => {:user_id => current_user.id} %>
            <% end %>

          </div>
          <div class="avatar-button-container">
            <%= button_to "Log out", destroy_user_session_path, :method => :delete, :id => "logout", :class => "avatar-button" %>

            <%= button_to "Friend", send_request_path(current_user.id, @user.id), :remote => true, 
                :id => "friend_button" unless @requested_or_friended %>

            <%= button_to "Message", message_path(@user.id), :method => "get" %>

          </div>
        </div>
      </div>
    </div>

    <div class="tinder">
      <div class="tinder--status">
        <i class="fa fa-remove"></i>
        <i class="fa fa-heart"></i>
      </div>

      <div class="tinder--cards">
        <div class="tinder--card">
          <% if @user_in_card %>
            <h1> Swipe for this lad/lass? </h1>
            <%= image_tag get_avatar(@user_in_card) %>
            <p> Name: <%= get_username(@user_in_card) %> </p>
                <p> Year: <%= @user_in_card.year %> </p>
                <p> Major: <%= @user_in_card.major %> </p>
                <p> College: <%= @user_in_card.college %> </p>
          <% else %>
            <%= render :partial => "layouts/nobody_to_swipe" %>
          <% end %>
        </div>
      </div>

      <div class="tinder--buttons">
        <button id="nope"><i class="fa fa-remove"></i></button>
        <button id="love"><i class="fa fa-heart"></i></button>
      </div>
    </div>
    <!-- content for friends list -->
    <div class="friends-container">
      <div class="friends-information">
        <div class="friends-list">
          <h1>Info</h1>
          <%= render :partial => "layouts/user_info", :locals => {:user_id => @user.id}%>
        </div>
        <div class="friends-list-container">
          <h1> Friends </h1>
          <% @friends.each do |friend| %> 
            <%= render :partial => "layouts/friend_card", :locals => {:friend_id => friend.id} %>
          <% end %>
        </div>
      </div>
    </div>

  </section>
</div>


<%= javascript_pack_tag "collegeForm" %>
<%= javascript_pack_tag "profile" %>
<%= stylesheet_link_tag "profile" %>

<script src="https://cdnjs.cloudflare.com/ajax/libs/hammer.js/2.0.8/hammer.js"
    integrity="sha512-qRj8N7fxOHxPkKjnQ9EJgLJ8Ng1OK7seBn1uk8wkqaXpa7OA13LO6txQ7+ajZonyc9Ts4K/ugXljevkFTUGBcw=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
  'use strict';

  var tinderContainer = document.querySelector('.tinder');
  var allCards = document.querySelectorAll('.tinder--card');
  var nope = document.getElementById('nope');
  var love = document.getElementById('love');
  var multipleCards = document.querySelector (".tinder--cards");

  function initCards(card, index) {
    var newCards = document.querySelectorAll('.tinder--card:not(.removed)');

    newCards.forEach(function (card, index) {
      card.style.zIndex = allCards.length - index;
      card.style.transform = 'scale(' + (20 - index) / 20 + ') translateY(-' + 30 * index + 'px)';
      card.style.opacity = (10 - index) / 10;
    });
    
    tinderContainer.classList.add('loaded');
  }

  initCards();

  allCards.forEach(function (el) {
    var hammertime = new Hammer(el);

    hammertime.on('pan', function (event) {
      el.classList.add('moving');
    });

    hammertime.on('pan', function (event) {
      if (event.deltaX === 0) return;
      if (event.center.x === 0 && event.center.y === 0) return;

      tinderContainer.classList.toggle('tinder_love', event.deltaX > 0);
      

      var xMulti = event.deltaX * 0.03;
      var yMulti = event.deltaY / 80;
      var rotate = xMulti * yMulti;

      event.target.style.transform = 'translate(' + event.deltaX + 'px, ' + event.deltaY + 'px) rotate(' + rotate + 'deg)';
    });

    hammertime.on('panend', function (event) {
      el.classList.remove('moving');
      tinderContainer.classList.remove('tinder_love');
      tinderContainer.classList.remove('tinder_nope');
      var moveOutWidth = document.body.clientWidth;
      var keep = Math.abs(event.deltaX) < 50 || Math.abs(event.velocityX) < 0.1;

      // swiped right, make friend request
      event.target.classList.toggle('removed', !keep);
        if (event.deltaX>0 && !keep){
          console.log("love");
          //document.location.reload(true);
          <% if @user_in_card %>
            window.location = "https://collegetinder.herokuapp.com/" + "/<%= current_user.id %>" + "/<%= @user_in_card.id %>" + "/swipe_send_request";
          <% end %>
      }
      // do not make friend request
      tinderContainer.classList.toggle('tinder_nope', event.deltaX < 0);
      if (event.deltaX<0 && !keep) {
        console.log("nope");
        alert("You gotta swipe right to see more cards.");
        document.location.reload(true);
      }

      if (keep) {
        event.target.style.transform = '';
      } else {
        var endX = Math.max(Math.abs(event.velocityX) * moveOutWidth, moveOutWidth);
        var toX = event.deltaX > 0 ? endX : -endX;
        var endY = Math.abs(event.velocityY) * moveOutWidth;
        var toY = event.deltaY > 0 ? endY : -endY;
        var xMulti = event.deltaX * 0.03;
        var yMulti = event.deltaY / 80;
        var rotate = xMulti * yMulti;

        event.target.style.transform = 'translate(' + toX + 'px, ' + (toY + event.deltaY) + 'px) rotate(' + rotate + 'deg)';
        initCards();
      }
    });
  });

  function createButtonListener(love) {
    return function (event) {
      var cards = document.querySelectorAll('.tinder--card:not(.removed)');
      var moveOutWidth = document.body.clientWidth * 1.5;

      if (!cards.length) return false;

      var card = cards[0];

      card.classList.add('removed');

      if (love) {
        card.style.transform = 'translate(' + moveOutWidth + 'px, -100px) rotate(-30deg)';
      } else {
        card.style.transform = 'translate(-' + moveOutWidth + 'px, -100px) rotate(30deg)';
      }

      initCards();

      event.preventDefault();
    };
  }

  var nopeListener = createButtonListener(false);
  var loveListener = createButtonListener(true);

  nope.addEventListener('click', nopeListener);
  love.addEventListener('click', loveListener);


</script>